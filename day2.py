# –î–µ–Ω—å 2 ‚Äì –†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏ (—Å—Ç—Ä–æ–∫–∏, –∏–Ω–¥–µ–∫—Å—ã, –º–µ—Ç–æ–¥—ã)

# üîπ –ó–ê–î–ê–ß–ê 1: –ü–µ—Ä–µ–≤–µ—Ä–Ω–∏ —Å—Ç—Ä–æ–∫—É
def reverse_string(s):
    return s[::-1]

print("–ó–ê–î–ê–ß–ê 1:")
print(reverse_string("–∫–∏–±–µ—Ä—Å–∞–º—É—Ä–∞–π"))  # –π–∞—Ä–∞–º—É—Å—Ä–µ–±–∏–∫


# üîπ –ó–ê–î–ê–ß–ê 2: –°–¥–µ–ª–∞–π –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∑–∞–≥–ª–∞–≤–Ω–æ–π
def capitalize_first(s):
    return s[0].upper() + s[1:]

print("\n–ó–ê–î–ê–ß–ê 2:")
print(capitalize_first("python"))  # Python


# üîπ –ó–ê–î–ê–ß–ê 3: –ü–æ–¥—Å—á—ë—Ç –≥–ª–∞—Å–Ω—ã—Ö
def count_vowels(s):
    vowels = "–∞–µ—ë–∏–æ—É—ã—ç—é—èAEIOUYaeiouy"
    return sum(1 for char in s if char in vowels)

print("\n–ó–ê–î–ê–ß–ê 3:")
print(count_vowels("–ø—Ä–∏–≤–µ—Ç, –∫–∏–±–µ—Ä–≤–æ–∏–Ω"))  # –ü—Ä–∏–º–µ—Ä: 6